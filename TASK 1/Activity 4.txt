Activity 4

4.1
class SmartDevice {
    fun turnOn() {
        println("Smart device is turned on.")
    }

    fun turnOff() {
        println("Smart device is turned off.")
    }
}
fun main() {
   val smartTvDevice = SmartDevice()
    smartTvDevice.turnOn()
    smartTvDevice.turnOff()
}

output: 
Smart device is turned on.
Smart device is turned off.

4.2

import kotlin.properties.ReadWriteProperty
import kotlin.reflect.KProperty

open class SmartDevice(val name: String, val category: String) {

    var deviceStatus = "online"
        protected set

    open val deviceType = "unknown"

    open fun turnOn() {
        deviceStatus = "on"
    }

    open fun turnOff() {
        deviceStatus = "off"
    }
}

class SmartTvDevice(deviceName: String, deviceCategory: String) :
    SmartDevice(name = deviceName, category = deviceCategory) {

    override val deviceType = "Smart TV"

    private var speakerVolume by RangeRegulator(initialValue = 2, minValue = 0, maxValue = 100)

    private var channelNumber by RangeRegulator(initialValue = 1, minValue = 0, maxValue = 200)

    fun increaseSpeakerVolume() {
        speakerVolume++
        println("Speaker volume increased to $speakerVolume.")
    }

    fun nextChannel() {
        channelNumber++
        println("Channel number increased to $channelNumber.")
    }

    override fun turnOn() {
        super.turnOn()
        println(
            "$name is turned on. Speaker volume is set to $speakerVolume and channel number is " +
                "set to $channelNumber."
        )
    }

    override fun turnOff() {
        super.turnOff()
        println("$name turned off")
    }
}

class SmartLightDevice(deviceName: String, deviceCategory: String) :
    SmartDevice(name = deviceName, category = deviceCategory) {

    override val deviceType = "Smart Light"

    private var brightnessLevel by RangeRegulator(initialValue = 0, minValue = 0, maxValue = 100)

    fun increaseBrightness() {
        brightnessLevel++
        println("Brightness increased to $brightnessLevel.")
    }

    override fun turnOn() {
        super.turnOn()
        brightnessLevel = 2
        println("$name turned on. The brightness level is $brightnessLevel.")
    }

    override fun turnOff() {
        super.turnOff()
        brightnessLevel = 0
        println("Smart Light turned off")
    }
}

class SmartHome(
    val smartTvDevice: SmartTvDevice,
    val smartLightDevice: SmartLightDevice
) {

    var deviceTurnOnCount = 0
        private set

    fun turnOnTv() {
        deviceTurnOnCount++
        smartTvDevice.turnOn()
    }

    fun turnOffTv() {
        deviceTurnOnCount--
        smartTvDevice.turnOff()
    }

    fun increaseTvVolume() {
        smartTvDevice.increaseSpeakerVolume()
    }

    fun changeTvChannelToNext() {
        smartTvDevice.nextChannel()
    }

    fun turnOnLight() {
        deviceTurnOnCount++
        smartLightDevice.turnOn()
    }

    fun turnOffLight() {
        deviceTurnOnCount--
        smartLightDevice.turnOff()
    }

    fun increaseLightBrightness() {
        smartLightDevice.increaseBrightness()
    }

    fun turnOffAllDevices() {
        turnOffTv()
        turnOffLight()
    }
}

class RangeRegulator(
    initialValue: Int,
    private val minValue: Int,
    private val maxValue: Int
) : ReadWriteProperty<Any?, Int> {

    var fieldData = initialValue

    override fun getValue(thisRef: Any?, property: KProperty<*>): Int {
        return fieldData
    }

    override fun setValue(thisRef: Any?, property: KProperty<*>, value: Int) {
        if (value in minValue..maxValue) {
            fieldData = value
        }
    }
}

fun main() {
    var smartDevice: SmartDevice = SmartTvDevice("Android TV", "Entertainment")
    smartDevice.turnOn()

    smartDevice = SmartLightDevice("Google Light", "Utility")
    smartDevice.turnOn()
}

output: Android TV is turned on. Speaker volume is set to 2 and channel number is set to 1.
Google Light turned on. The brightness level is 2.

4.3

// Define a SmartDevice class
open class SmartDevice(
    val name: String,
    val category: String,
    val deviceType: String,
    var deviceStatus: String = "off"
) {
    fun turnOn() {
        deviceStatus = "on"
        SmartHome.deviceTurnOnCount++
    }

    fun turnOff() {
        deviceStatus = "off"
    }

    fun printDeviceInfo() {
        println("Device name: $name, category: $category, type: $deviceType")
    }
}

// Define a SmartTvDevice class that extends SmartDevice
class SmartTvDevice(name: String, category: String, deviceType: String) :
    SmartDevice(name, category, deviceType) {

    fun decreaseVolume() {
        if (deviceStatus == "on") {
            // Decrease volume logic
            println("Decreasing TV volume.")
        }
    }

    fun previousChannel() {
        if (deviceStatus == "on") {
            // Previous channel logic
            println("Navigating to the previous channel.")
        }
    }

    fun printSmartTvInfo() {
        printDeviceInfo()
        // Add specific TV information if needed
    }
}

// Define a SmartLightDevice class that extends SmartDevice
class SmartLightDevice(name: String, category: String, deviceType: String) :
    SmartDevice(name, category, deviceType) {

    fun decreaseBrightness() {
        if (deviceStatus == "on") {
            // Decrease brightness logic
            println("Decreasing light brightness.")
        }
    }

    fun printSmartLightInfo() {
        printDeviceInfo()
        // Add specific light information if needed
    }
}

// Define a SmartHome class
object SmartHome {
    var deviceTurnOnCount: Int = 0

    fun decreaseTvVolume(tv: SmartTvDevice) {
        tv.decreaseVolume()
    }

    fun changeTvChannelToPrevious(tv: SmartTvDevice) {
        tv.previousChannel()
    }

    fun printSmartTvInfo(tv: SmartTvDevice) {
        tv.printSmartTvInfo()
    }

    fun printSmartLightInfo(light: SmartLightDevice) {
        light.printSmartLightInfo()
    }

    fun decreaseLightBrightness(light: SmartLightDevice) {
        light.decreaseBrightness()
    }
}

fun main() {
    // Example usage in Kotlin Playground

    // Create SmartTvDevice and SmartLightDevice instances
    val smartTv = SmartTvDevice("Living Room TV", "Entertainment", "Smart TV")
    val smartLight = SmartLightDevice("Living Room Light", "Home Automation", "Smart Light")

    // Turn on devices
    smartTv.turnOn()
    smartLight.turnOn()

    // Call methods from SmartHome
    SmartHome.decreaseTvVolume(smartTv)
    SmartHome.changeTvChannelToPrevious(smartTv)
    SmartHome.printSmartTvInfo(smartTv)
    SmartHome.printSmartLightInfo(smartLight)
    SmartHome.decreaseLightBrightness(smartLight)
}

output: 
Decreasing TV volume.
Navigating to the previous channel.
Device name: Living Room TV, category: Entertainment, type: Smart TV
Device name: Living Room Light, category: Home Automation, type: Smart Light
Decreasing light brightness.