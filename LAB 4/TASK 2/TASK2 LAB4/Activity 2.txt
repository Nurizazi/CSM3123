3.1 Student Progress

object StudentProgress {
    var total: Int = 10
    var answered: Int = 3
}
fun main() {
    //...
    println("${StudentProgress.answered} of ${StudentProgress.total} answered.")
}

output: 3 of 10 answered

3.2 Quiz

enum class Difficulty {
    EASY, MEDIUM, HARD
}
class Question<T>(
    val questionText: String,
    val answer: T,
    val difficulty: Difficulty
)
class Quiz {
    val question1 = Question<String>("Quoth the raven ___", "nevermore", Difficulty.MEDIUM)
    val question2 = Question<Boolean>("The sky is green. True or false", false, Difficulty.EASY)
    val question3 = Question<Int>("How many days are there between full moons?", 28, Difficulty.HARD)
	companion object StudentProgress {
        var total: Int = 10
        var answered: Int = 3
    }
}
fun main() {
    println("${Quiz.answered} of ${Quiz.total} answered.")
}

output: 3 of 10 answered

3.3 

enum class Difficulty {
    EASY, MEDIUM, HARD
}
class Question<T>(
    val questionText: String,
    val answer: T,
    val difficulty: Difficulty
)
class Quiz {
    val question1 = Question<String>("Quoth the raven ___", "nevermore", Difficulty.MEDIUM)
    val question2 = Question<Boolean>("The sky is green. True or false", false, Difficulty.EASY)
    val question3 = Question<Int>("How many days are there between full moons?", 28, Difficulty.HARD)
	companion object StudentProgress {
        var total: Int = 10
        var answered: Int = 3
    }
}
val Quiz.StudentProgress.progressText: String
	get() = "${answered} of ${total} answered"
fun Quiz.StudentProgress.printProgressBar() {
    repeat(Quiz.answered) {print("▓")}
    repeat(Quiz.total - Quiz.answered) { print("▒") }
    println()
    println(Quiz.progressText)
}
fun main() {
    Quiz.printProgressBar()
}

output: ▓▓▓▒▒▒▒▒▒▒
3 of 10 answered


3.4

enum class Difficulty {
    EASY, MEDIUM, HARD
}
class Question<T>(
    val questionText: String,
    val answer: T,
    val difficulty: Difficulty
)
interface ProgressPrintable{
    val progressText: String
    fun printProgressBar()
}
class Quiz : ProgressPrintable {
    val question1 = Question<String>("Quoth the raven ___", "nevermore", Difficulty.MEDIUM)
    val question2 = Question<Boolean>("The sky is green. True or false", false, Difficulty.EASY)
    val question3 = Question<Int>("How many days are there between full moons?", 28, Difficulty.HARD)
	companion object StudentProgress {
        var total: Int = 10
        var answered: Int = 3
    }
override val progressText: String
        get() = "${answered} of ${total} answered"   
    
override fun printProgressBar() {
    repeat(Quiz.answered) { print("▓") }
    repeat(Quiz.total - Quiz.answered) { print("▒") }
    println()
    println(progressText)
}
}

fun main() {
    Quiz().printProgressBar()
}

output: ▓▓▓▒▒▒▒▒▒▒
3 of 10 answered

